
import './Admin_view_result.scss';
import page from './Admin_view_resultHtml'
import Myservice from '../Myservice/Myservice'
var $ = require("jquery");
var swal = require("sweetalert");

class Admin_view_result extends Myservice {

  constructor(props: any) {
    super(props);
  }

  componentDidMount() {
    if (this.allow_admin())
      return;
    if (window.location.href.match(/(http:\/\/127.0.0.1|(http:\/\/localhost))/gi))
      $(".del_user_btn").css({ "display": "block" })

    this.get_exam("exam");
    this.del_sess("eid");


    var context = this

    $(document).ready(function () {
      $("#myInput").on("keyup", function (this: any) {
        var value = $(this).val().toLowerCase();
        $("#result tr").filter(function (this: any) {
          $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
        });
      });

      $(".exam").change(function (this: any) {
        if ($('.exam :selected').val() == "all") {
          context.del_sess("eid")
          $(".user_det").html("")
        }
        else {
          context.set_sess("eid", $('.exam :selected').val())
          context.view_user_det($('.exam :selected').val(), null);
          context.set_sess("id", "all")
        }
        context.load_res();
      });

    });


    $("select").eq(0).focus()

    super.componentDidMount();
  }

  componentDidUpdate() {
    super.componentDidUpdate();
  }

  load_res = () => {
    let str = ""
    if (this.get_sess("eid") != null)
      str = this.fetch_data("/server/view_res/", "POST", "exam=" + this.get_sess("eid"))
    else
      str = this.fetch_data("/server/view_res/", "POST")
    let json_obj = JSON.parse(str)
    //alert(str+"\n"+json_obj[0])
    let txt = "<thead><tr><th>Id</th><th>Email</th><th>Total Duration(Mins)</th><th>Score</th><th>View Details</th><th>Delete User Details</th></tr></thead><tbody>"
    let val1: any, val2: any
    for (val1 in json_obj) {
      let dur = 0;
      if (json_obj[val1]["Total Duration"] != "None")
        dur = parseFloat((json_obj[val1]["Total Duration"] / 60).toFixed(2));
      txt += "<tr>"
      txt += "<td >" + json_obj[val1]["ID"] + "</td>"
      txt += "<td >" + json_obj[val1]["Username"] + "</td>"
      txt += "<td >" + dur + "</td>"
      if (json_obj[val1]["Score"] != -1)
        txt += "<td >" + json_obj[val1]["Score"] + "</td>"
      else
        txt += "<td>NA</td>"

      if (dur != 0)
        txt += "<td className='lnk' val='" + json_obj[val1]["ID"] + "'><u><a>View Detail</a></u></td>"
      else
        txt += "<td>No Details</td>"
      txt += "<td  style={{text-align:'center'}} val='" + json_obj[val1]["ID"] + "'><input type='checkbox' className='del_user' name='del' value='" + json_obj[val1]["ID"] + "' /></td>"
      txt += "</tr></tbody>"
    }

    $("#result").html(txt)
    var context = this
    $(".result tbody").find("tr").find("td").eq(4).on("click", function (this: any) {
      context.del_sess("eid");
      context.set_sess("id", $(this).attr("val"))
      window.open("#admin_detail_res/id="+$(this).attr("val")+"&eid="+$('.exam :selected').val())
    });
    let del_user = $(".result tbody").find("tr");
    $(".del_user_btn_complete").on("click", function (this: any) {

      var ids: any = []
      del_user.each(function (this: any) {
        let checkbox = $(this).find("td").eq(5).find("input")
        if (checkbox.prop("checked"))
          ids.push(checkbox.val())
      });
      if (ids.length == 0)
        return
      context.fetch_data("/server/remove_user/", "POST", "ids=" + ids.join(",") + "&all=" + "true");
      context.set_sess("eid", $('.exam :selected').val())
      context.load_res();
    });

    $(".del_user_btn").on("click", function (this: any) {
      var ids: any = []
      del_user.each(function (this: any) {
        let checkbox = $(this).find("td").eq(5).find("input")
        if (checkbox.prop("checked"))
          ids.push(checkbox.val())
      });

      if (ids.length == 0)
        return
      context.fetch_data("/server/remove_user/", "POST", "ids=" + ids.join(",") + "&all=" + "false");
      context.set_sess("eid", $('.exam :selected').val())
      context.load_res();
    });

  }

  open_all = () => {
    this.set_sess("id", "all")
    this.open_link("#check_res_det")
  }

  get_exam = (id: any) => {
    var cat_str = this.fetch_data("/server/getexam/", "POST");
    let json_obj = JSON.parse(cat_str)
    let val1: any, val2: any
    let txt = ""
    // txt = "<option value=\"all\">All</option>"
    for (val1 in json_obj) {
      txt += "<option  value=\"" + json_obj[val1]["id"] + "\">"
      txt += json_obj[val1]["e_name"] + "</option>"
    }
    $("#exam").html(txt)
    $("select option:eq(0)").attr("selected", "selected");
    this.set_sess("eid", $('.exam :selected').val())
    this.view_user_det($('.exam :selected').val(), null);
    this.set_sess("id", "all")
    this.load_res();
  }





  view_user_det = (id = null, type = null) => {
    if (id == null)
      return "No details found"
    let str = ""
    if (type == "user")
      str = this.fetch_data("/server/view_res_user/", "POST", "id=" + id);
    else
      str = this.fetch_data("/server/view_cat_res/", "POST", "eid=" + id);
    if (str.match("syntax error")) {
      $("#result").html(
        "<br /><span className='error' style={{color:'red',padding:'15px',margin:'10px',fontSize: '30px'}}'>Syntax error!</span><br />&nbsp");
    }
    let json_obj = JSON.parse(str);
    let txt = "<tr>";
    for (var val in json_obj[0]) {
      txt += "<th>" + val + "</th>";
    }
    txt += "</tr>";
    let val1: any, val2: any;
    for (val1 in json_obj) {
      txt += "<tr>";
      for (val2 in json_obj[val1])
        txt += "<td style='max-width: 100px;overflow-wrap: break-word'>" + json_obj[val1][val2] + "</td>";
      txt += "</tr>";
    }
    $(".user_det").html(txt)
  };


  render() {
    return (
      page(this)
    )
  }
}

export default Admin_view_result;
